@using System.Collections
@using System.Text.Json
@using Newtonsoft.Json
@inherits MaterializeBaseComponent
@inject IJSRuntime JSRuntime

<div id="@Id" name="@Name" class="chips chips-placeholder"></div>

@code{
    
    [Parameter]
    public IList<string> Chips { get; set; }
    
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            JSRuntime.InvokeAsync<object>("callbackProxy", DotNetObjectReference.Create(this), "initChips", "GetChipsDataCallBack");
        }
    }
    
    [JSInvokable]
    public void GetChipsDataCallBack(JsonElement p_chipsData)
    {
        Chips = p_chipsData.EnumerateArray().Select(p_tag =>
        {
            if (p_tag.TryGetProperty("tag", out JsonElement tagValue))
            {
                return tagValue.GetString();
            }

            return null;
        }).ToList();

        OnSelectedValueChanged(Chips);
    }

    [Parameter]
    public EventCallback<IList<string>> ChipsChanged { get; set; }
    
    private Task OnSelectedValueChanged(IList<string> p_chips)
    {
        return ChipsChanged.InvokeAsync(p_chips);
    }
}